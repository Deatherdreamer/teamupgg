[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "SignupForm",
        "importPath": "allauth.account.forms",
        "description": "allauth.account.forms",
        "isExtraImport": true,
        "detail": "allauth.account.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "require_POST",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls.conf",
        "description": "django.urls.conf",
        "isExtraImport": true,
        "detail": "django.urls.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0001_initial",
        "description": "myapp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Game',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "myapp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0002_post_game",
        "description": "myapp.migrations.0002_post_game",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='post',\n            name='game',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.game'),\n        ),",
        "detail": "myapp.migrations.0002_post_game",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0003_profile",
        "description": "myapp.migrations.0003_profile",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('myapp', '0002_post_game'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Profile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "myapp.migrations.0003_profile",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0004_profile_nickname",
        "description": "myapp.migrations.0004_profile_nickname",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0003_profile'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='profile',\n            name='nickname',\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "myapp.migrations.0004_profile_nickname",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0005_profile_riot_puuid_profilesocials",
        "description": "myapp.migrations.0005_profile_riot_puuid_profilesocials",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0004_profile_nickname'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='profile',\n            name='riot_puuid',\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "myapp.migrations.0005_profile_riot_puuid_profilesocials",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0006_alter_profilesocials_network",
        "description": "myapp.migrations.0006_alter_profilesocials_network",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0005_profile_riot_puuid_profilesocials'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='profilesocials',\n            name='network',\n            field=models.CharField(choices=[('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Twitch', 'Twitch'), ('Youtube', 'Youtube'), ('Discord', 'Discord'), ('Steam', 'Steam')], max_length=100),\n        ),",
        "detail": "myapp.migrations.0006_alter_profilesocials_network",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0007_tournament_description_tournament_title",
        "description": "myapp.migrations.0007_tournament_description_tournament_title",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0006_alter_profilesocials_network'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='tournament',\n            name='description',\n            field=models.TextField(default=''),\n            preserve_default=False,",
        "detail": "myapp.migrations.0007_tournament_description_tournament_title",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "myapp.migrations.0008_alter_post_game",
        "description": "myapp.migrations.0008_alter_post_game",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('myapp', '0007_tournament_description_tournament_title'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='post',\n            name='game',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.game'),\n        ),",
        "detail": "myapp.migrations.0008_alter_post_game",
        "documentation": {}
    },
    {
        "label": "MyappConfig",
        "kind": 6,
        "importPath": "myapp.apps",
        "description": "myapp.apps",
        "peekOfCode": "class MyappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'myapp'",
        "detail": "myapp.apps",
        "documentation": {}
    },
    {
        "label": "MyCustomSignupForm",
        "kind": 6,
        "importPath": "myapp.forms",
        "description": "myapp.forms",
        "peekOfCode": "class MyCustomSignupForm(SignupForm):\n    email = forms.EmailField(\n        max_length=254,\n        label='Correo',\n        widget=forms.EmailInput(attrs={'class': 'form-control', 'placeholder': 'Ingrese su correo'}),\n        help_text='Ingrese su correo'\n    )\n    first_name = forms.CharField(\n        max_length=30,\n        label='Nombre',",
        "detail": "myapp.forms",
        "documentation": {}
    },
    {
        "label": "PostForm",
        "kind": 6,
        "importPath": "myapp.forms",
        "description": "myapp.forms",
        "peekOfCode": "class PostForm(forms.ModelForm):\n    class Meta:\n        model = Post\n        fields = [ 'game','title', 'message']\n        labels = {\n            'title': 'Titulo',\n            'message': 'Mensaje',\n            'game': 'Juego'\n        }\n        help_texts = {",
        "detail": "myapp.forms",
        "documentation": {}
    },
    {
        "label": "TournamentForm",
        "kind": 6,
        "importPath": "myapp.forms",
        "description": "myapp.forms",
        "peekOfCode": "class TournamentForm(forms.ModelForm):\n    class Meta:\n        model = Tournament\n        fields = ['game', 'title', 'description', 'is_public', 'password', 'max_players', 'date_of_tournament']\n        labels = {\n            'game': 'Juego',\n            'title': 'Titulo',\n            'description': 'Descripción',\n            'is_public': 'Publico',\n            'password': 'Contraseña',",
        "detail": "myapp.forms",
        "documentation": {}
    },
    {
        "label": "ProfileSocialsForm",
        "kind": 6,
        "importPath": "myapp.forms",
        "description": "myapp.forms",
        "peekOfCode": "class ProfileSocialsForm(forms.ModelForm):\n    class Meta:\n        model = ProfileSocials\n        fields = ['network','url']\n        labels = {\n            'network': 'Red Social',\n            'url': 'URL'\n        }\n        help_texts = {\n            'network': 'La red social',",
        "detail": "myapp.forms",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Profile(models.Model):\n    \"\"\"\n    Representa el perfil de un usuario en la aplicación.\n    \"\"\"\n    user = models.OneToOneField(get_user_model(), on_delete=models.CASCADE)\n    nickname = models.CharField(max_length=100, blank=True, null=True)\n    date_of_birth = models.DateField()\n    gender = models.CharField(max_length=10)\t\n    country = models.CharField(max_length=100)  \n    riot_puuid = models.CharField(max_length=100, blank=True, null=True)",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "ProfileSocials",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class ProfileSocials(models.Model):\n    \"\"\"\n    Representa las redes sociales asociadas a un perfil.\n    \"\"\"\n    NETWORK_CHOICES = [\n        ('Facebook', 'Facebook'),\n        ('Twitter', 'Twitter'),\n        ('Instagram', 'Instagram'),\n        ('Twitch', 'Twitch'),\n        ('Youtube', 'Youtube'),",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Game(models.Model):\n    \"\"\"\n    Representa un juego en la aplicación.\n    \"\"\"\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        \"\"\"\n        Devuelve una representación en cadena del juego.\n        \"\"\"\n        return self.name",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Post(models.Model):\n    \"\"\"\n    Representa una publicación en la aplicación.\n    \"\"\"\n    title = models.CharField(max_length=100)\n    message = models.TextField()\n    game = models.ForeignKey(Game, on_delete=models.CASCADE)\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    def __str__(self):\n        \"\"\"",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "Tournament",
        "kind": 6,
        "importPath": "myapp.models",
        "description": "myapp.models",
        "peekOfCode": "class Tournament(models.Model):\n    \"\"\"\n    Representa un torneo en la aplicación.\n    \"\"\"\n    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    game = models.ForeignKey(Game, on_delete=models.CASCADE)\n    title = models.CharField(max_length=100)\n    description = models.TextField()\n    is_public = models.BooleanField(default=False)\n    password = models.CharField(max_length=100, blank=True, null=True)",
        "detail": "myapp.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "myapp.urls",
        "description": "myapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('', index, name='index'),\n    path('torneos/', torneos, name='torneos'),\n    path('torneos/<int:id>/inscribirse/', inscribirse_torneo, name='inscribirse_torneo'),\n    path('torneos/nuevo-torneo/', nuevo_torneo, name='nuevo_torneo'),\n    path('publicaciones/', publicaciones , name='publicaciones'),\n    path('publicaciones/nueva-publicacion/', publicar , name='publicar'),\n    path('perfil/<int:id>/', perfil , name='perfil'),\n    path('perfil/nuevo-social/', añadir_cuenta_social , name='añadir_cuenta_social'),\n]",
        "detail": "myapp.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def index(request):\n    \"\"\"\n    Vista para la página de inicio.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'index.html'.\n    \"\"\"\n    return render(request, 'index.html', {   \n    })",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "torneos",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def torneos(request):\n    \"\"\"\n    Vista para la página de torneos.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'torneos.html' y los torneos disponibles.\n    \"\"\"\n    breadcrumbs = [\n        {'name': 'Torneos'},",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "nuevo_torneo",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def nuevo_torneo(request):\n    \"\"\"\n    Vista para crear un nuevo torneo.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'nuevo_torneo.html' y el formulario para crear un torneo.\n    \"\"\"\n    breadcrumbs = [\n        {'name': 'Torneos', 'url': reverse('torneos')},",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "inscribirse_torneo",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def inscribirse_torneo(request, id):\n    \"\"\"\n    Vista para inscribirse a un torneo.\n    Args:\n        request: La solicitud HTTP recibida.\n        id: El ID del torneo al que se desea inscribir.\n    Returns:\n        La respuesta HTTP con un mensaje de éxito o error.\n    \"\"\"\n    tournament = Tournament.objects.get(id=id)",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "publicaciones",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def publicaciones(request):\n    \"\"\"\n    Vista para la página de publicaciones.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'publicaciones.html' y las publicaciones disponibles.\n    \"\"\"\n    posts = Post.objects.all()\n    breadcrumbs = [",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "publicar",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def publicar(request):\n    \"\"\"\n    Vista para crear una nueva publicación.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'publicar.html' y el formulario para crear una publicación.\n    \"\"\"\n    breadcrumbs = [\n        {'name': 'Publicaciones', 'url': reverse('publicaciones')},",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "perfil",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def perfil(request, id):\n    \"\"\"\n    Vista para el perfil de un usuario.\n    Args:\n        request: La solicitud HTTP recibida.\n        id: El ID del usuario cuyo perfil se desea ver.\n    Returns:\n        La respuesta HTTP con la plantilla 'perfil.html' y el perfil del usuario especificado.\n    \"\"\"\n    profile = Profile.objects.get(user_id=id)",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "añadir_cuenta_social",
        "kind": 2,
        "importPath": "myapp.views",
        "description": "myapp.views",
        "peekOfCode": "def añadir_cuenta_social(request):\n    \"\"\"\n    Vista para añadir una cuenta social al perfil.\n    Args:\n        request: La solicitud HTTP recibida.\n    Returns:\n        La respuesta HTTP con la plantilla 'añadir_cuenta_social.html' y el formulario para añadir una cuenta social.\n    \"\"\"\n    breadcrumbs = [\n        {'name': 'Mi Perfil', 'url': reverse('perfil', args=[request.user.id])},",
        "detail": "myapp.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "teamupgg.asgi",
        "description": "teamupgg.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "teamupgg.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "SECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'allauth',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'allauth',\n    'allauth.account',\n    'myapp.apps.MyappConfig',    ",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    # Add the account middleware:\n    \"allauth.account.middleware.AccountMiddleware\",",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "ROOT_URLCONF = 'teamupgg.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    # Needed to login by username in Django admin, regardless of `allauth`\n    'django.contrib.auth.backends.ModelBackend',\n    # `allauth` specific authentication methods, such as login by email\n    'allauth.account.auth_backends.AuthenticationBackend',\n]\nACCOUNT_AUTHENTICATION_METHOD = 'email'\nACCOUNT_EMAIL_REQUIRED=True\nACCOUNT_USERNAME_REQUIRED = False\nLOGIN_REDIRECT_URL = '/'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_AUTHENTICATION_METHOD",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "ACCOUNT_AUTHENTICATION_METHOD = 'email'\nACCOUNT_EMAIL_REQUIRED=True\nACCOUNT_USERNAME_REQUIRED = False\nLOGIN_REDIRECT_URL = '/'\nACCOUNT_FORMS = {'signup': 'myapp.forms.MyCustomSignupForm'}\nWSGI_APPLICATION = 'teamupgg.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_USERNAME_REQUIRED",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "ACCOUNT_USERNAME_REQUIRED = False\nLOGIN_REDIRECT_URL = '/'\nACCOUNT_FORMS = {'signup': 'myapp.forms.MyCustomSignupForm'}\nWSGI_APPLICATION = 'teamupgg.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\nACCOUNT_FORMS = {'signup': 'myapp.forms.MyCustomSignupForm'}\nWSGI_APPLICATION = 'teamupgg.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_FORMS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "ACCOUNT_FORMS = {'signup': 'myapp.forms.MyCustomSignupForm'}\nWSGI_APPLICATION = 'teamupgg.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "WSGI_APPLICATION = 'teamupgg.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    # {",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    # {\n    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    # },\n    # {\n    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    # },\n    # {\n    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    # },",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "LANGUAGE_CODE = 'es-ve'\nTIME_ZONE = 'America/Caracas'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "TIME_ZONE = 'America/Caracas'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]\n# Default primary key field type",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'myapp/static'),\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "teamupgg.settings",
        "description": "teamupgg.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "teamupgg.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "teamupgg.urls",
        "description": "teamupgg.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('myapp.urls')),\n    path('accounts/', include('allauth.urls')),\n]",
        "detail": "teamupgg.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "teamupgg.wsgi",
        "description": "teamupgg.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "teamupgg.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'teamupgg.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]